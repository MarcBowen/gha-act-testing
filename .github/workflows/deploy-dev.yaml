name: Deploy Dev

on:
  workflow_dispatch:
    inputs:
      components:
        description: The associated Terraform components for the service
        type: string
        required: true

permissions:
  id-token: write
  contents: write

jobs:
  deploy-dev:
    permissions:
      actions: write
      checks: write
      contents: read
      packages: read
      repository-projects: read
      statuses: read
    env:
      GH_TOKEN: ${{ github.token }}
#    env:
#      GH_TOKEN: ${{ secrets.PAT }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [ api,drs,dms ]
      fail-fast: true
      max-parallel: 1
    outputs:
      component: ${{ steps.set-output.outputs.component }}
    steps:
      - name: ðŸ“¨ Checkout
        uses: actions/checkout@v4

      - name: Echo
        run: echo ${{ matrix.component }}

#      - name: Set Output
#        id: set-output
#        run: echo "component=${{ matrix.component }}" >> $GITHUB_OUTPUT

      - name: Run Apply
        run: gh workflow run deploy-dev-apply.yaml -f component=${{ matrix.component }}

      - name: Wait for job to start
        run: sleep 20s

      - name: Get Workflow ID
        id: get-run-id
        run: |
          run_id=$(gh run list --workflow=deploy-dev-apply.yaml --json url --jq '.[0].url' | rev | cut -d '/' -f 1 | rev)
          echo "run_id=${run_id}" >> $GITHUB_OUTPUT

      - name: Wait for completion
        run: |
          status="starting"
          while [ "$status" == "starting" ] || [ "$status" == "in_progress" ]
          do
            sleep 5s
          
            response="$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/MarcBowen/gha-act-testing/actions/runs/${{ steps.get-run-id.outputs.run_id }})"
            status=$(echo $response | jq -r '.status')
            echo "Job Status: $status"
          done
          
          echo "job complete"
          
                - name: Wait for completion

      - name: Output result log
        run: |
          gh run view ${{ steps.get-run-id.outputs.run_id }} --log

#
#  apply:
#    strategy:
#      matrix:
#        component: [ api,drs,dms ]
#      fail-fast: true
#      max-parallel: 1
#    needs: deploy-dev
#    uses: ./.github/workflows/deploy-dev-apply.yaml
#    with:
#      component: ${{ needs.deploy-dev.outputs.component }}
